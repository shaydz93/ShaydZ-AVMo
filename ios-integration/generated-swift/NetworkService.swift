//
//  NetworkService.swift
//  ShaydZ-AVMo
//
//  Generated by iOS Integration Tool
//

import Foundation
import Combine

class NetworkService: ObservableObject {
    static let shared = NetworkService()
    
    private let baseURL = "http://localhost:8080"
    private let session = URLSession.shared
    private var authToken: String?
    private var cancellables = Set<AnyCancellable>()
    
    private init() {}

    func login(username: String, password: String) -> AnyPublisher<AuthResponse, Error> {
        let loginData = LoginRequest(username: username, password: password)
        return request(endpoint: "/auth/login", method: .POST, body: loginData)
    }

    func logout() {
        authToken = nil
    }

    func fetchApps() -> AnyPublisher<[App], Error> {
        return request(endpoint: "/apps", method: .GET)
    }
}

enum HTTPMethod: String {
    case GET
    case POST
    case PUT
    case DELETE
}

enum NetworkError {
    case invalidURL
    case serverError
    case unauthorized
}
