version: '3.8'

services:
  api-gateway:
    build:
      context: ./backend/api-gateway
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=development
      - AUTH_SERVICE_URL=http://auth-service:8081
      - VM_ORCHESTRATOR_URL=http://vm-orchestrator:8082
      - APP_CATALOG_URL=http://app-catalog:8083
    depends_on:
      - auth-service
      - vm-orchestrator
      - app-catalog
    networks:
      - avmo-network
    restart: unless-stopped

  auth-service:
    build:
      context: ./backend/auth-service
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      - NODE_ENV=development
      - JWT_SECRET=your_jwt_secret_key_here
      - DB_CONNECTION_STRING=mongodb://mongo:27017/auth
    depends_on:
      - mongo
    networks:
      - avmo-network
    restart: unless-stopped

  vm-orchestrator:
    build:
      context: ./backend/vm-orchestrator
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    environment:
      - PYTHONUNBUFFERED=1
      - AUTH_SERVICE_URL=http://auth-service:8081
      - DB_CONNECTION_STRING=mongodb://mongo:27017/vms
    depends_on:
      - mongo
    networks:
      - avmo-network
    privileged: true  # Needed for virtualization
    restart: unless-stopped

  app-catalog:
    build:
      context: ./backend/app-catalog
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    environment:
      - NODE_ENV=development
      - AUTH_SERVICE_URL=http://auth-service:8081
      - DB_CONNECTION_STRING=mongodb://mongo:27017/apps
    depends_on:
      - mongo
    networks:
      - avmo-network
    restart: unless-stopped

  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - avmo-network
    restart: unless-stopped

networks:
  avmo-network:
    driver: bridge

volumes:
  mongo_data:
    driver: local
